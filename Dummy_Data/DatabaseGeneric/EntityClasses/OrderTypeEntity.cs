//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using Dummy.HelperClasses;
using Dummy.FactoryClasses;
using Dummy.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Dummy.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'OrderType'.<br/><br/></summary>
	[Serializable]
	public partial class OrderTypeEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<OrderHistoryEntity> _orderHistories;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static OrderTypeEntityStaticMetaData _staticMetaData = new OrderTypeEntityStaticMetaData();
		private static OrderTypeRelations _relationsFactory = new OrderTypeRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name OrderHistories</summary>
			public static readonly string OrderHistories = "OrderHistories";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class OrderTypeEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public OrderTypeEntityStaticMetaData()
			{
				SetEntityCoreInfo("OrderTypeEntity", InheritanceHierarchyType.None, false, (int)Dummy.EntityType.OrderTypeEntity, typeof(OrderTypeEntity), typeof(OrderTypeEntityFactory), false);
				AddNavigatorMetaData<OrderTypeEntity, EntityCollection<OrderHistoryEntity>>("OrderHistories", a => a._orderHistories, (a, b) => a._orderHistories = b, a => a.OrderHistories, () => new OrderTypeRelations().OrderHistoryEntityUsingOrderTypeId, typeof(OrderHistoryEntity), (int)Dummy.EntityType.OrderHistoryEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static OrderTypeEntity()
		{
		}

		/// <summary> CTor</summary>
		public OrderTypeEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public OrderTypeEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this OrderTypeEntity</param>
		public OrderTypeEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="orderTypeId">PK value for OrderType which data should be fetched into this OrderType object</param>
		public OrderTypeEntity(System.Int16 orderTypeId) : this(orderTypeId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="orderTypeId">PK value for OrderType which data should be fetched into this OrderType object</param>
		/// <param name="validator">The custom validator object for this OrderTypeEntity</param>
		public OrderTypeEntity(System.Int16 orderTypeId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.OrderTypeId = orderTypeId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected OrderTypeEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'OrderHistory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrderHistories() { return CreateRelationInfoForNavigator("OrderHistories"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this OrderTypeEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static OrderTypeRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrderHistory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrderHistories { get { return _staticMetaData.GetPrefetchPathElement("OrderHistories", CommonEntityBase.CreateEntityCollection<OrderHistoryEntity>()); } }

		/// <summary>The Code property of the Entity OrderType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderType"."Code".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Code
		{
			get { return (System.String)GetValue((int)OrderTypeFieldIndex.Code, true); }
			set	{ SetValue((int)OrderTypeFieldIndex.Code, value); }
		}

		/// <summary>The CreateDate property of the Entity OrderType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderType"."CreateDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime2, 7, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime CreateDate
		{
			get { return (System.DateTime)GetValue((int)OrderTypeFieldIndex.CreateDate, true); }
			set	{ SetValue((int)OrderTypeFieldIndex.CreateDate, value); }
		}

		/// <summary>The Name property of the Entity OrderType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderType"."Name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)OrderTypeFieldIndex.Name, true); }
			set	{ SetValue((int)OrderTypeFieldIndex.Name, value); }
		}

		/// <summary>The OrderTypeId property of the Entity OrderType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderType"."OrderTypeId".<br/>Table field type characteristics (type, precision, scale, length): SmallInt, 5, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int16 OrderTypeId
		{
			get { return (System.Int16)GetValue((int)OrderTypeFieldIndex.OrderTypeId, true); }
			set { SetValue((int)OrderTypeFieldIndex.OrderTypeId, value); }		}

		/// <summary>Gets the EntityCollection with the related entities of type 'OrderHistoryEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(OrderHistoryEntity))]
		public virtual EntityCollection<OrderHistoryEntity> OrderHistories { get { return GetOrCreateEntityCollection<OrderHistoryEntity, OrderHistoryEntityFactory>("OrderType", true, false, ref _orderHistories); } }

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace Dummy
{
	public enum OrderTypeFieldIndex
	{
		///<summary>Code. </summary>
		Code,
		///<summary>CreateDate. </summary>
		CreateDate,
		///<summary>Name. </summary>
		Name,
		///<summary>OrderTypeId. </summary>
		OrderTypeId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace Dummy.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: OrderType. </summary>
	public partial class OrderTypeRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between OrderTypeEntity and OrderHistoryEntity over the 1:n relation they have, using the relation between the fields: OrderType.OrderTypeId - OrderHistory.OrderTypeId</summary>
		public virtual IEntityRelation OrderHistoryEntityUsingOrderTypeId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "OrderHistories", true, new[] { OrderTypeFields.OrderTypeId, OrderHistoryFields.OrderTypeId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticOrderTypeRelations
	{
		internal static readonly IEntityRelation OrderHistoryEntityUsingOrderTypeIdStatic = new OrderTypeRelations().OrderHistoryEntityUsingOrderTypeId;

		/// <summary>CTor</summary>
		static StaticOrderTypeRelations() { }
	}
}
