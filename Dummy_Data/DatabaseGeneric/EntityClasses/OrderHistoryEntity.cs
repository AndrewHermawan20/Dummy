//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using Dummy.HelperClasses;
using Dummy.FactoryClasses;
using Dummy.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Dummy.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'OrderHistory'.<br/><br/></summary>
	[Serializable]
	public partial class OrderHistoryEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private OrderTypeEntity _orderType;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static OrderHistoryEntityStaticMetaData _staticMetaData = new OrderHistoryEntityStaticMetaData();
		private static OrderHistoryRelations _relationsFactory = new OrderHistoryRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name OrderType</summary>
			public static readonly string OrderType = "OrderType";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class OrderHistoryEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public OrderHistoryEntityStaticMetaData()
			{
				SetEntityCoreInfo("OrderHistoryEntity", InheritanceHierarchyType.None, false, (int)Dummy.EntityType.OrderHistoryEntity, typeof(OrderHistoryEntity), typeof(OrderHistoryEntityFactory), false);
				AddNavigatorMetaData<OrderHistoryEntity, OrderTypeEntity>("OrderType", "OrderHistories", (a, b) => a._orderType = b, a => a._orderType, (a, b) => a.OrderType = b, Dummy.RelationClasses.StaticOrderHistoryRelations.OrderTypeEntityUsingOrderTypeIdStatic, ()=>new OrderHistoryRelations().OrderTypeEntityUsingOrderTypeId, null, new int[] { (int)OrderHistoryFieldIndex.OrderTypeId }, null, true, (int)Dummy.EntityType.OrderTypeEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static OrderHistoryEntity()
		{
		}

		/// <summary> CTor</summary>
		public OrderHistoryEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public OrderHistoryEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this OrderHistoryEntity</param>
		public OrderHistoryEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="orderHistoryId">PK value for OrderHistory which data should be fetched into this OrderHistory object</param>
		public OrderHistoryEntity(System.Int64 orderHistoryId) : this(orderHistoryId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="orderHistoryId">PK value for OrderHistory which data should be fetched into this OrderHistory object</param>
		/// <param name="validator">The custom validator object for this OrderHistoryEntity</param>
		public OrderHistoryEntity(System.Int64 orderHistoryId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.OrderHistoryId = orderHistoryId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected OrderHistoryEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'OrderType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrderType() { return CreateRelationInfoForNavigator("OrderType"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this OrderHistoryEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static OrderHistoryRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrderType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrderType { get { return _staticMetaData.GetPrefetchPathElement("OrderType", CommonEntityBase.CreateEntityCollection<OrderTypeEntity>()); } }

		/// <summary>The Amount property of the Entity OrderHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderHistory"."Amount".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal Amount
		{
			get { return (System.Decimal)GetValue((int)OrderHistoryFieldIndex.Amount, true); }
			set	{ SetValue((int)OrderHistoryFieldIndex.Amount, value); }
		}

		/// <summary>The CancelDate property of the Entity OrderHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderHistory"."CancelDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime2, 7, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> CancelDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)OrderHistoryFieldIndex.CancelDate, false); }
			set	{ SetValue((int)OrderHistoryFieldIndex.CancelDate, value); }
		}

		/// <summary>The CreateDate property of the Entity OrderHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderHistory"."CreateDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime2, 7, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime CreateDate
		{
			get { return (System.DateTime)GetValue((int)OrderHistoryFieldIndex.CreateDate, true); }
			set	{ SetValue((int)OrderHistoryFieldIndex.CreateDate, value); }
		}

		/// <summary>The OrderDate property of the Entity OrderHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderHistory"."OrderDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime2, 7, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime OrderDate
		{
			get { return (System.DateTime)GetValue((int)OrderHistoryFieldIndex.OrderDate, true); }
			set	{ SetValue((int)OrderHistoryFieldIndex.OrderDate, value); }
		}

		/// <summary>The OrderHistoryId property of the Entity OrderHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderHistory"."OrderHistoryId".<br/>Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int64 OrderHistoryId
		{
			get { return (System.Int64)GetValue((int)OrderHistoryFieldIndex.OrderHistoryId, true); }
			set { SetValue((int)OrderHistoryFieldIndex.OrderHistoryId, value); }		}

		/// <summary>The OrderTypeId property of the Entity OrderHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderHistory"."OrderTypeId".<br/>Table field type characteristics (type, precision, scale, length): SmallInt, 5, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int16 OrderTypeId
		{
			get { return (System.Int16)GetValue((int)OrderHistoryFieldIndex.OrderTypeId, true); }
			set	{ SetValue((int)OrderHistoryFieldIndex.OrderTypeId, value); }
		}

		/// <summary>The UpdateDate property of the Entity OrderHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderHistory"."UpdateDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime2, 7, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime UpdateDate
		{
			get { return (System.DateTime)GetValue((int)OrderHistoryFieldIndex.UpdateDate, true); }
			set	{ SetValue((int)OrderHistoryFieldIndex.UpdateDate, value); }
		}

		/// <summary>Gets / sets related entity of type 'OrderTypeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual OrderTypeEntity OrderType
		{
			get { return _orderType; }
			set { SetSingleRelatedEntityNavigator(value, "OrderType"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace Dummy
{
	public enum OrderHistoryFieldIndex
	{
		///<summary>Amount. </summary>
		Amount,
		///<summary>CancelDate. </summary>
		CancelDate,
		///<summary>CreateDate. </summary>
		CreateDate,
		///<summary>OrderDate. </summary>
		OrderDate,
		///<summary>OrderHistoryId. </summary>
		OrderHistoryId,
		///<summary>OrderTypeId. </summary>
		OrderTypeId,
		///<summary>UpdateDate. </summary>
		UpdateDate,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace Dummy.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: OrderHistory. </summary>
	public partial class OrderHistoryRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between OrderHistoryEntity and OrderTypeEntity over the m:1 relation they have, using the relation between the fields: OrderHistory.OrderTypeId - OrderType.OrderTypeId</summary>
		public virtual IEntityRelation OrderTypeEntityUsingOrderTypeId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "OrderType", false, new[] { OrderTypeFields.OrderTypeId, OrderHistoryFields.OrderTypeId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticOrderHistoryRelations
	{
		internal static readonly IEntityRelation OrderTypeEntityUsingOrderTypeIdStatic = new OrderHistoryRelations().OrderTypeEntityUsingOrderTypeId;

		/// <summary>CTor</summary>
		static StaticOrderHistoryRelations() { }
	}
}
