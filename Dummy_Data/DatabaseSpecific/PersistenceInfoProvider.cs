//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Dummy.DatabaseSpecific
{
	/// <summary>Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	internal static class PersistenceInfoProviderSingleton
	{
		private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static PersistenceInfoProviderSingleton() {	}

		/// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
		/// <returns>Instance of the PersistenceInfoProvider.</returns>
		public static IPersistenceInfoProvider GetInstance() { return _providerInstance; }
	}

	/// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
	internal class PersistenceInfoProviderCore : PersistenceInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
		internal PersistenceInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
		private void Init()
		{
			this.InitClass();
			InitConfigurationEntityMappings();
			InitOrderHistoryEntityMappings();
			InitOrderTypeEntityMappings();
			InitPortofolioEntityMappings();
			InitPortofolioItemEntityMappings();
			InitStockEntityMappings();
			InitStockSectorEntityMappings();
			InitSummaryEntityMappings();
			InitTransactionEntityMappings();
			InitTransactionStatusEntityMappings();
			InitTransactionTypeEntityMappings();
			InitUserEntityMappings();
		}

		/// <summary>Inits ConfigurationEntity's mappings</summary>
		private void InitConfigurationEntityMappings()
		{
			this.AddElementMapping("ConfigurationEntity", @"Dummy", @"dbo", "Configuration", 6, 0);
			this.AddElementFieldMapping("ConfigurationEntity", "ConfigurationId", "ConfigurationId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ConfigurationEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("ConfigurationEntity", "Name", "Name", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("ConfigurationEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("ConfigurationEntity", "Value", "Value", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("ConfigurationEntity", "Version", "Version", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
		}

		/// <summary>Inits OrderHistoryEntity's mappings</summary>
		private void InitOrderHistoryEntityMappings()
		{
			this.AddElementMapping("OrderHistoryEntity", @"Dummy", @"dbo", "OrderHistory", 7, 0);
			this.AddElementFieldMapping("OrderHistoryEntity", "Amount", "Amount", false, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 0);
			this.AddElementFieldMapping("OrderHistoryEntity", "CancelDate", "CancelDate", true, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("OrderHistoryEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 2);
			this.AddElementFieldMapping("OrderHistoryEntity", "OrderDate", "OrderDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("OrderHistoryEntity", "OrderHistoryId", "OrderHistoryId", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("OrderHistoryEntity", "OrderTypeId", "OrderTypeId", false, "SmallInt", 0, 5, 0, false, "", null, typeof(System.Int16), 5);
			this.AddElementFieldMapping("OrderHistoryEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 6);
		}

		/// <summary>Inits OrderTypeEntity's mappings</summary>
		private void InitOrderTypeEntityMappings()
		{
			this.AddElementMapping("OrderTypeEntity", @"Dummy", @"dbo", "OrderType", 4, 0);
			this.AddElementFieldMapping("OrderTypeEntity", "Code", "Code", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("OrderTypeEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("OrderTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("OrderTypeEntity", "OrderTypeId", "OrderTypeId", false, "SmallInt", 0, 5, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int16), 3);
		}

		/// <summary>Inits PortofolioEntity's mappings</summary>
		private void InitPortofolioEntityMappings()
		{
			this.AddElementMapping("PortofolioEntity", @"Dummy", @"dbo", "Portofolio", 6, 2);
			this.AddElementFieldMapping("PortofolioEntity", "Cash", "Cash", false, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 0);
			this.AddElementFieldMapping("PortofolioEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("PortofolioEntity", "PortofolioId", "PortofolioId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("PortofolioEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("PortofolioEntity", "UserId", "UserId", false, "Int", 0, 10, 0, true, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("PortofolioEntity", "Value", "Value", false, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 5);
		}

		/// <summary>Inits PortofolioItemEntity's mappings</summary>
		private void InitPortofolioItemEntityMappings()
		{
			this.AddElementMapping("PortofolioItemEntity", @"Dummy", @"dbo", "PortofolioItem", 10, 0);
			this.AddElementFieldMapping("PortofolioItemEntity", "AverageValue", "AverageValue", false, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 0);
			this.AddElementFieldMapping("PortofolioItemEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("PortofolioItemEntity", "Lot", "Lot", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("PortofolioItemEntity", "PortofolioId", "PortofolioId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("PortofolioItemEntity", "PortofolioItemId", "PortofolioItemId", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("PortofolioItemEntity", "Shared", "Shared", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 5);
			this.AddElementFieldMapping("PortofolioItemEntity", "StockId", "StockId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("PortofolioItemEntity", "TotalValue", "TotalValue", false, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 7);
			this.AddElementFieldMapping("PortofolioItemEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 8);
			this.AddElementFieldMapping("PortofolioItemEntity", "Version", "Version", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 9);
		}

		/// <summary>Inits StockEntity's mappings</summary>
		private void InitStockEntityMappings()
		{
			this.AddElementMapping("StockEntity", @"Dummy", @"dbo", "Stock", 9, 0);
			this.AddElementFieldMapping("StockEntity", "Code", "Code", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("StockEntity", "CreatedDate", "CreatedDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("StockEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
			this.AddElementFieldMapping("StockEntity", "Name", "Name", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("StockEntity", "ReleaseDate", "ReleaseDate", true, "Date", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("StockEntity", "StockId", "StockId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("StockEntity", "StockSectorId", "StockSectorId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("StockEntity", "TotalShare", "TotalShare", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 7);
			this.AddElementFieldMapping("StockEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 8);
		}

		/// <summary>Inits StockSectorEntity's mappings</summary>
		private void InitStockSectorEntityMappings()
		{
			this.AddElementMapping("StockSectorEntity", @"Dummy", @"dbo", "StockSector", 6, 0);
			this.AddElementFieldMapping("StockSectorEntity", "Code", "Code", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("StockSectorEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("StockSectorEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
			this.AddElementFieldMapping("StockSectorEntity", "Name", "Name", false, "NVarChar", 500, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("StockSectorEntity", "StockSectorId", "StockSectorId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("StockSectorEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 5);
		}

		/// <summary>Inits SummaryEntity's mappings</summary>
		private void InitSummaryEntityMappings()
		{
			this.AddElementMapping("SummaryEntity", @"Dummy", @"dbo", "Summary", 17, 0);
			this.AddElementFieldMapping("SummaryEntity", "AdjustmentCurrentCash", "AdjustmentCurrentCash", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 0);
			this.AddElementFieldMapping("SummaryEntity", "CapitalGain", "CapitalGain", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 1);
			this.AddElementFieldMapping("SummaryEntity", "CapitalLoss", "CapitalLoss", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 2);
			this.AddElementFieldMapping("SummaryEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("SummaryEntity", "CurrentCash", "CurrentCash", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 4);
			this.AddElementFieldMapping("SummaryEntity", "Deviden", "Deviden", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 5);
			this.AddElementFieldMapping("SummaryEntity", "LoanInterest", "LoanInterest", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 6);
			this.AddElementFieldMapping("SummaryEntity", "MateraiFee", "MateraiFee", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 7);
			this.AddElementFieldMapping("SummaryEntity", "SummaryDate", "SummaryDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 8);
			this.AddElementFieldMapping("SummaryEntity", "SummaryId", "SummaryId", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 9);
			this.AddElementFieldMapping("SummaryEntity", "TotalBuyNetAmount", "TotalBuyNetAmount", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 10);
			this.AddElementFieldMapping("SummaryEntity", "TotalSellNetAmount", "TotalSellNetAmount", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 11);
			this.AddElementFieldMapping("SummaryEntity", "Transfer", "Transfer", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 12);
			this.AddElementFieldMapping("SummaryEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 13);
			this.AddElementFieldMapping("SummaryEntity", "UserId", "UserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 14);
			this.AddElementFieldMapping("SummaryEntity", "Version", "Version", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 15);
			this.AddElementFieldMapping("SummaryEntity", "Withdraw", "Withdraw", true, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 16);
		}

		/// <summary>Inits TransactionEntity's mappings</summary>
		private void InitTransactionEntityMappings()
		{
			this.AddElementMapping("TransactionEntity", @"Dummy", @"dbo", "Transaction", 19, 0);
			this.AddElementFieldMapping("TransactionEntity", "BuyTransactionId", "BuyTransactionId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("TransactionEntity", "CancelDate", "CancelDate", true, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("TransactionEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 2);
			this.AddElementFieldMapping("TransactionEntity", "GrossAmount", "GrossAmount", false, "NChar", 10, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("TransactionEntity", "IsSellFirst", "IsSellFirst", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("TransactionEntity", "Lot", "Lot", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 5);
			this.AddElementFieldMapping("TransactionEntity", "NetAmount", "NetAmount", false, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 6);
			this.AddElementFieldMapping("TransactionEntity", "Price", "Price", false, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 7);
			this.AddElementFieldMapping("TransactionEntity", "SellTransactionId", "SellTransactionId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 8);
			this.AddElementFieldMapping("TransactionEntity", "Shared", "Shared", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 9);
			this.AddElementFieldMapping("TransactionEntity", "StockId", "StockId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 10);
			this.AddElementFieldMapping("TransactionEntity", "TransactionDate", "TransactionDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 11);
			this.AddElementFieldMapping("TransactionEntity", "TransactionFee", "TransactionFee", false, "Money", 0, 19, 4, false, "", null, typeof(System.Decimal), 12);
			this.AddElementFieldMapping("TransactionEntity", "TransactionId", "TransactionId", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 13);
			this.AddElementFieldMapping("TransactionEntity", "TransactionStatusId", "TransactionStatusId", false, "SmallInt", 0, 5, 0, false, "", null, typeof(System.Int16), 14);
			this.AddElementFieldMapping("TransactionEntity", "TransactionTypeId", "TransactionTypeId", false, "SmallInt", 0, 5, 0, false, "", null, typeof(System.Int16), 15);
			this.AddElementFieldMapping("TransactionEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 16);
			this.AddElementFieldMapping("TransactionEntity", "UserId", "UserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 17);
			this.AddElementFieldMapping("TransactionEntity", "Version", "Version", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 18);
		}

		/// <summary>Inits TransactionStatusEntity's mappings</summary>
		private void InitTransactionStatusEntityMappings()
		{
			this.AddElementMapping("TransactionStatusEntity", @"Dummy", @"dbo", "TransactionStatus", 5, 0);
			this.AddElementFieldMapping("TransactionStatusEntity", "Code", "Code", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("TransactionStatusEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("TransactionStatusEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("TransactionStatusEntity", "TransactionStatusId", "TransactionStatusId", false, "SmallInt", 0, 5, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int16), 3);
			this.AddElementFieldMapping("TransactionStatusEntity", "Version", "Version", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
		}

		/// <summary>Inits TransactionTypeEntity's mappings</summary>
		private void InitTransactionTypeEntityMappings()
		{
			this.AddElementMapping("TransactionTypeEntity", @"Dummy", @"dbo", "TransactionType", 5, 0);
			this.AddElementFieldMapping("TransactionTypeEntity", "Code", "Code", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("TransactionTypeEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("TransactionTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("TransactionTypeEntity", "TransactionTypeId", "TransactionTypeId", false, "SmallInt", 0, 5, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int16), 3);
			this.AddElementFieldMapping("TransactionTypeEntity", "Version", "Version", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
		}

		/// <summary>Inits UserEntity's mappings</summary>
		private void InitUserEntityMappings()
		{
			this.AddElementMapping("UserEntity", @"Dummy", @"dbo", "User", 7, 0);
			this.AddElementFieldMapping("UserEntity", "CreateDate", "CreateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 0);
			this.AddElementFieldMapping("UserEntity", "Name", "Name", false, "NVarChar", 200, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("UserEntity", "Password", "Password", false, "NVarChar", 200, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("UserEntity", "UpdateDate", "UpdateDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("UserEntity", "UserId", "UserId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("UserEntity", "UserName", "UserName", false, "NVarChar", 200, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("UserEntity", "Version", "Version", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 6);
		}

	}
}
